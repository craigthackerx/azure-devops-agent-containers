---
parameters:

  - name: AGENT_AMOUNT
    displayName: "The amount of agents you require"
    default: "1"
    type: string

  - name: COUNT
    default: "1"
    displayName: "The amount that the count should start at"
    type: string

  - name: USERNAME
    displayName: "Username to be passed for registry login"
    type: string

  - name: PASSWORD
    displayName: "Password or access token for registry login"
    type: string

  - name: CONTEXT
    displayName: "The the path to your dockerfile"
    type: string

  - name: DOCKERFILE_NAME
    displayName: "The name of the Dockerfile"
    default: "Dockerfile"
    type: string

  - name: NORMAL_USER
    displayName: "The name for the container user"
    default: $(head /dev/urandom | tr -dc A-Za-z0-9 | head -c10)
    type: string

  - name: AZP_URL
    displayName: "The URL of your Azure DevOps instance, e.g. https://dev.azure.com/example"
    type: string

  - name: AZP_TOKEN
    displayName: "The PAT token for your Agent to access Azure DevOps"
    type: string

  - name: AZP_AGENT_NAME
    displayName: "The name for your agent"
    default: $(head /dev/urandom | tr -dc A-Za-z0-9 | head -c10)
    type: string

  - name: AZP_POOL
    displayName: "The pool for your agent to join"
    type: string

  - name: AZP_WORK
    displayName: "The default working directory for your agent"
    default: "_work"
    type: string

  - name: REGISTRY
    displayName: "The target registry"
    default: "ghcr.io"
    type: string

  - name: IMAGE_NAME
    displayName: "The name of the image"
    type: string

  - name: TAGS
    displayName: "The tag of the image"
    type: string
    default: ":latest"

  - name: POOL__NAME
    displayName: "The name of the vmImage for Azure Hosted Pools"
    type: string
    default: "ubuntu-latest"

################## DO NOT EDIT ANYTHING PAST HERE UNLESS YOU KNOW WHAT YOU ARE DOING ##################

jobs:
  - job: build_container
    pool: ${{ parameters.POOL_NAME }}
    workspace:
      clean: all
    displayName: Build Image - ${{ parameters.IMAGE_NAME }}${{ parameters.COUNT }}-${{ parameters.AGENT_AMOUNT }}${{ parameters.TAGS }}
    timeoutInMinutes: 120

    steps:

      - checkout: self

      - bash: |
          
          podman login -u ${{ parameters.USERNAME }} -p ${{ parameters.PASSWORD }} ${{ parameters.REGISTRY }} && \
          
          for INDEX in $(seq ${{ parameters.COUNT }} ${{ parameters.AGENT_AMOUNT}})
          do
          
          podman build \
          --file="${{ parameters.DOCKERFILE_NAME }}" \
          --tag="${{ parameters.REGISTRY }}/${{ parameters.USERNAME }}/${{ parameters.IMAGE_NAME }}${INDEX}${{ parameters.TAGS }}" \
          --build-arg NORMAL_USER="${{ parameters.NORMAL_USER }}"  \
          --build-arg ACCEPT_EULA="y" \
          --build-arg AZP_URL="${{ parameters.AZP_URL }}" \
          --build-arg AZP_TOKEN="${{ parameters.AZP_TOKEN }}" \
          --build-arg AZP_AGENT_NAME="${{ parameters.AZP_AGENT_NAME }}" \
          --build-arg AZP_POOL="${{ parameters.AZP_POOL }}" \
          --build-arg AZP_WORK="${{ parameters.AZP_WORK}}"
          podman push "${{ parameters.REGISTRY }}/${{ parameters.USERNAME }}/${{ parameters.IMAGE_NAME }}${INDEX}${{ parameters.TAGS }}"
          
          done
          
          podman logout ${{ parameters.REGISTRY }}
        displayName: Run Podman Login, Build x${{ parameters.AGENT_AMOUNT }}, Push x${{ parameters.AGENT_AMOUNT }} and Logout
        workingDirectory: ${{ parameters.CONTEXT }}